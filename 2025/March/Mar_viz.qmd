---
title: "March_viz"
author: "Arindam Baruah"
format: html
---

```{r theme}

library(tidyverse)
library(stringr)
library(glue)
library(ggrepel)
library(ggplot2)
library(ggtext)
library(sysfonts)
library(showtext)
library(ggbump)
library(gghighlight)
library(MetBrewer)

# caption handles
swd <- str_glue("#SWDchallenge: June 2024 &bull; Source: Synthetic data from ChatGPT<br>")  
li <- str_glue("<span style='font-family:fa6-brands'>&#xf08c;</span>")  
gh <- str_glue("<span style='font-family:fa6-brands'>&#xf09b;</span>")
mn <- str_glue("<span style='font-family:fa6-brands'>&#xf4f6;</span>")
tt <- str_glue("#TidyTuesdayR: November 2024 &bull; Source: US Customs and Border Protection (CBP) <br>") 

# plot colors
bkg_col      <- "#F5F5F5"  
title_col    <- "#3d3d3d"           
subtitle_col <- "#3d3d3d"     
caption_col  <- "#72647D"   
text_col     <- colorspace::darken("gray40" , 0.2)  

# fonts

font_add('fa6-brands','fontawesome/otfs/Font Awesome 6 Brands-Regular-400.otf') 
font_add_google("Oswald", regular.wt = 400, family = "title")                 
font_add_google("Radley", regular.wt = 400, family = "subtitle")  
font_add_google("Quattrocento Sans", regular.wt = 400, family = "text")        
font_add_google("Merriweather", regular.wt = 400,family = "caption")
showtext_auto(enable = TRUE)  

# Plot texts

title_text <- "<span style='color:darkred'>Mapping the Gaps: Uneven Adoption of the FBI’s NIBRS Reporting System</span>"

subtitle_text <- "The FBI’s National Incident-Based Reporting System (NIBRS) is a centralized and detailed crime reporting system that tracks individual criminal incidents across the United States. While many agencies have transitioned to NIBRS, adoption remains uneven. <br> <br>

State police, state agencies, and city councils have been particularly slow to adopt the system. A spatial analysis of adoption patterns reveals that lagging agencies are concentrated in the Southwest and Northeast regions of the U.S., indicating potential structural or administrative challenges in these areas."


X_icon <- glue("<span style='font-family:fa6-brands'>&#xe61b;</span>")

caption_text <- str_glue("{li} Arindam Baruah | {X_icon} @wizsights | {gh} arinbaruah | Source: TidyTuesdayR | #mapproj #rstudio #ggplot2")

theme_set(theme_minimal(base_size = 15, base_family = "text"))                

# Theme updates

theme_update(
  plot.title.position   = "plot",
  plot.caption.position = "plot",
  legend.position       = 'plot',
  plot.margin           = margin(t = 10, r = 15, b = 0, l = 15),
  plot.background       = element_rect(fill = bkg_col, color = bkg_col),
  panel.background      = element_rect(fill = bkg_col, color = bkg_col),
  axis.title.x          = element_text(margin = margin(10, 0, 0, 0), size = rel(1), color = text_col, family = 'text', face = 'bold'),
  axis.title.y          = element_text(margin = margin(0, 10, 0, 0), size = rel(1), color = text_col, family = 'text', face = 'bold'),
  axis.text             = element_text(size = 10, color = text_col, family = 'text',face = "bold"),
  panel.grid.minor.y    = element_blank(),
  panel.grid.major.y    = element_line(linetype = "dotted", linewidth = 0.1, color = 'gray40'),
  panel.grid.minor.x    = element_blank(),
  panel.grid.major.x    = element_blank(),
  axis.line.x           = element_line(color = "#d7d7d8", linewidth = .2),
)

 

```


```{r}
pop_data <- read_csv(url("https://raw.githubusercontent.com/autistic96/project-2/main/world_population.csv"))
```

# Data wrangling


```{r}
pop_data <- pop_data %>% select(-c(Rank,CCA3,Capital,"Area (km²)","Density (per km²)","Growth Rate","World Population Percentage" ))
```

```{r}
pop_data_long <- pop_data %>% pivot_longer(cols = -c("Country/Territory",Continent),names_to = "Year",values_to = "Population")

pop_data_long <- pop_data_long %>% 
 separate(Year, into = c("Year", "population"), sep = " ", extra = "merge", fill = "right")

pop_data_long <- pop_data_long %>% mutate(Year = as.integer(Year)) %>% select(-population)

```

```{r}
pop_data_long_grouped <- pop_data_long %>% 
  group_by(Continent,Year) %>% 
  summarise(Total_population = sum(Population)) 


```


# FBI data

```{r}
agencies <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-18/agencies.csv')
```

## Data cleaning

```{r}
agencies
```

```{r}
agencies_nibrs <- agencies %>% filter(is_nibrs == TRUE)
agencies_nibrs_grouped <- agencies_nibrs %>% group_by(state,year(nibrs_start_date)) %>% summarise(Total_agencies = n())
```

```{r}


agencies_grouped <- agencies %>% group_by(agency_type,is_nibrs) %>% summarise(Total_nibr = n())
#agencies_grouped <- agencies %>% group_by(agency_type) %>% mutate(Total_agencies = n())
agencies_grouped <- agencies_grouped %>% group_by(agency_type) %>% mutate(Total_agencies = sum(Total_nibr))
agencies_grouped <- agencies_grouped %>% filter(is_nibrs == TRUE) %>% mutate(nibr_adoption_rate = round(100*Total_nibr/Total_agencies,2))
agencies_grouped
```
```{r}
agencies_grouped <- agencies_grouped %>% select(-is_nibrs)
agencies <- agencies %>% left_join(agencies_grouped,by = "agency_type")
```

```{r}

agencies <- agencies %>% mutate(label = str_glue("{agency_type}<br>({format(nibr_adoption_rate)} %)"))
```


```{r}
library(usmap)
library(mapproj)
```

```{r}
state = map_data("state")
```

```{r}


agencies <- agencies |>
  filter(!is.na(longitude),
         !is.na(latitude),
         !is.na(agency_type),
         agency_type != "Unknown",
         agency_type != "Other",
         between(longitude, -130, -60),
         between(latitude, 20, 55))


pl <- 
  ggplot()+
  geom_polygon(
        data = state, aes(x = long, y = lat, group = group),
        fill = "#37474F",
        color = "white"
    ) +
  geom_point(
        data = agencies, 
        aes(x = longitude, y = latitude, color = is_nibrs),shape = 19, alpha = .4, size = 1
    ) +
 scale_color_manual(values = c("#C0392B","#52BE80")) +
 coord_map("conic", lat0 = 30) +
 labs(caption = caption_text,
      title = title_text) +
 facet_wrap(~label) +
  theme(legend.position = "none",
        panel.spacing = unit(3, "lines"),
        panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        panel.grid.major.x = element_blank(),
        plot.margin = margin(20, 20, 20, 20),
    legend.title.position = "top",
    legend.title = element_text(
      color = text_col,
      hjust = 0.5,
      family = "text",
      face = "bold",
      size = rel(3),
    ),
    legend.text = element_markdown(
      color = text_col,
      family = "text",
      size = rel(2),
      face = "bold"
    ),
    plot.title            = element_markdown(
      size                = rel(4),
      family              = "title",
      face                = "bold",
      color               = title_col,
      lineheight          = 0.5,
      margin              = margin(t = 5, b = 5),
      hjust               = 0.5
    ),        
    plot.subtitle         = element_markdown(
      size                = rel(1), 
      family              = 'subtitle',
      color               = subtitle_col,
      hjust               = 0.5,
      lineheight          = 0.5, 
      margin              = margin(t = 5, b = 1)
    ),
      plot.caption          = element_markdown(
      size                = rel(1.5), 
      family              = 'caption',
      color               = caption_col,
      lineheight          = 0.3,
      hjust               = 0.5,
      halign              = 0,
      margin              = margin(t = 10, b = 10)
    ),
    strip.text = element_markdown(
      size                = rel(2),
      family              = 'text',
      face                = "bold",
      lineheight          = 0.3
    ),
    axis.text  = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.line.x = element_blank()
  ) 
  
pl

ggsave("FBI_nibrs_data.jpeg",plot = pl,width =9, height = 5,dpi=300)
```

# March

```{r}
shelter <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-03-04/longbeach.csv')
```

```{r}

outcome_types <- c("rescue","return to rescue")
shelter_year <- shelter %>% filter(outcome_type %in% outcome_types) %>% group_by(year(outcome_date)) %>% summarise(Total = n())
```

```{r}
shelter %>% group_by(year(outcome_date),outcome_is_dead) %>% summarise(Total = n())
```

```{r}
adoptions_year <- shelter %>% filter(outcome_type == "adoption") %>% group_by(year(outcome_date),animal_type) %>% summarise(Total = n())
```
```{r}
adoptions_total <- shelter %>% filter(outcome_type == "adoption") %>% group_by(animal_type) %>% summarise(Total = n()) %>% arrange(-Total)
```
# Group by year for rescue

```{r}
ggplot(data = shelter_year, 
       aes(x = `year(outcome_date)`, y = Total)) +
  geom_rect(
    xmin = 2020,
    xmax = 2022,
    ymin = 0,
    ymax = 1500,
    fill = "#E79778",
    alpha = 0.8
  ) +
  geom_area(alpha = 0.6,fill = "#E3A953") +
  geom_line(linewidth = 1.5) +  
  annotate(
    "text",
    x = 2021,
    y = 850,
    colour = "black",
    label = 'COVID-19 effect',
    size = unit(4, "pt")
  ) +
  geom_point(data = shelter_year %>% filter(`year(outcome_date)` == c(2021,2024)),
             aes(x = `year(outcome_date)`,
                 y = Total),
                 size = 4) +
  geom_text_repel(data = shelter_year %>% filter(`year(outcome_date)` == c(2021,2024)),
             aes(label = Total),
             vjust = 3,
             hjust = -1) +
  labs(x  = "Year", 
       y = "Animal rescues", 
       title = "Long Island Animal Rescues")
```
```{r}
shelter_year_type <- shelter %>% filter(outcome_type %in% outcome_types) %>% group_by(animal_type,year(outcome_date)) %>% summarise(Total = n())
```

# Waffle chart

```{r}
library(waffle)
waffle_box <- c(
  "#FFE119", # Yellow
  "#4363D8", # Strong Blue
  "#E6194B", # Bright Red
  "#3CB44B", # Vivid Green
  "#F58231", # Orange
  "#911EB4", # Purple
  "#42D4F4", # Cyan
  "#F032E6", # Magenta
  "#A9A9A9", # Dark Gray
  "#800000"  # Maroon
)

dim_order <- c("cat","dog","bird", "other","rabbit","wild","reptile","livestock","guinea pig","amphibian")

shelter_year_type$animal_type <- factor(shelter_year_type$animal_type, levels = dim_order)
shelter_year_type <- shelter_year_type[order(shelter_year_type$animal_type), ] #Maintaining the order in waffle chart

rescue_waffle <- ggplot(data = shelter_year_type,aes(fill = animal_type, values = Total)) +
  geom_waffle(color = text_col, size = .1, flip = TRUE,n_rows = 20) +
  facet_wrap(~`year(outcome_date)`, nrow = 1, strip.position = "bottom") +
  scale_x_discrete() +
  scale_y_continuous(
   labels = function(x) x*20, 
    expand = c(0, 0)
  )  +
  scale_fill_manual(values = waffle_box) +
  labs(
  fill = "",
   y = "Total rescued",
  caption = caption_text,
  breaks = dim_order) + 
  theme(legend.position = "top",
    legend.title.position = "top",
    legend.title = element_text(
      color = text_col,
      hjust = 0.5,
      family = "text",
      face = "bold",
      size = 7,
    ),
    legend.text = element_text(
      color = text_col,
      family = "text",
      size = 7,
      face = "bold"
    ),
    plot.title            = element_text(
      size                = rel(1.3),
      family              = "title",
      face                = "bold",
      color               = title_col,
      lineheight          = 1.1,
      margin              = margin(t = 5, b = 5),
      hjust               = 0.5
    ),        
    plot.subtitle         = element_markdown(
      size                = rel(0.66), 
      family              = 'subtitle',
      color               = subtitle_col,
      hjust               = 0,
      lineheight          = 1.4, 
      margin              = margin(t = 5, b = 1)
    ),
      plot.caption          = element_markdown(
      size                = rel(0.5), 
      family              = 'caption',
      color               = caption_col,
      lineheight          = 0.6,
      hjust               = 0.5,
      halign              = 0,
      margin              = margin(t = 10, b = 10)
    ),
    axis.title.y = element_text(size = 10,
                                family = "text")
  ) + coord_equal()
ggsave("Longbeach_rescue.jpeg",plot = rescue_waffle,width =12, height = 9)

rescue_waffle
```


```{r}
ggplot(data = shelter_year_type,aes(x = `year(outcome_date)`, y = Total)) + geom_col()
```



```{r}

subtitle_text <- "The ratio of number of observations (n) to variables (p) indicates the dimensionality of the dataset.<br> Datasets with less observations than the available variables are problematic to analyse.<br> On the other hand,as the number of variables increases, the volume of the space increases exponentially, <br> making data analysis more complex and less intuitive. This is commonly termed as the __curse of dimensionality.__"

waffle_box <- c("#CF352E", "#e6bc00", "#3a9234","#FB8B23")

dim_order <- c("Problematic datasets (< 1)","Low dimensional (> 20)","Moderate dimensional (10-15)", "High dimensional (<= 10)")

ratio_df$status <- factor(ratio_df$status, levels = dim_order)

dimensional_waffle <- ggplot(data = ratio_df,aes(fill = status, values = n)) +
  geom_waffle(color = text_col, size = .1, flip = TRUE) +
  facet_wrap(~year, nrow = 1, strip.position = "bottom") +
  scale_x_discrete() +
  scale_y_continuous(
   labels = function(x) x * 10,   # 10 observations per row
    expand = c(0, 0)
  ) +
  scale_fill_manual(values = waffle_box) +
  labs(
  title = title_text,
  fill = "",
   y = "Number of datasets",
  subtitle = subtitle_text,
  caption = caption_text) + 
  theme(legend.position = "top",
    legend.title.position = "top",
    legend.title = element_text(
      color = text_col,
      hjust = 0.5,
      family = "text",
      face = "bold",
      size = 7,
    ),
    legend.text = element_text(
      color = text_col,
      family = "text",
      size = 7,
      face = "bold"
    ),
    plot.title            = element_text(
      size                = rel(1.3),
      family              = "title",
      face                = "bold",
      color               = title_col,
      lineheight          = 1.1,
      margin              = margin(t = 5, b = 5),
      hjust               = 0.5
    ),        
    plot.subtitle         = element_markdown(
      size                = rel(0.66), 
      family              = 'subtitle',
      color               = subtitle_col,
      hjust               = 0,
      lineheight          = 1.4, 
      margin              = margin(t = 5, b = 1)
    ),
      plot.caption          = element_markdown(
      size                = rel(0.5), 
      family              = 'caption',
      color               = caption_col,
      lineheight          = 0.6,
      hjust               = 0.5,
      halign              = 0,
      margin              = margin(t = 10, b = 10)
    ),
    axis.title.y = element_text(size = 10,
                                family = "text")
  ) + coord_equal()



dimensional_waffle

```
